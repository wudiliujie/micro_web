// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

/*
Package yxl_micro_srv_account is a generated protocol buffer package.

It is generated from these files:
	account.proto

It has these top-level messages:
	LoginRequest
	LoginResponse
	GameLoginRequest
	GameLoginResponse
*/
package yxl_micro_srv_account

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LoginRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Pass string `protobuf:"bytes,2,opt,name=pass" json:"pass,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LoginRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type LoginResponse struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *LoginResponse) Reset()                    { *m = LoginResponse{} }
func (m *LoginResponse) String() string            { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()               {}
func (*LoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type GameLoginRequest struct {
	Appid int32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pass  string `protobuf:"bytes,3,opt,name=pass" json:"pass,omitempty"`
}

func (m *GameLoginRequest) Reset()                    { *m = GameLoginRequest{} }
func (m *GameLoginRequest) String() string            { return proto.CompactTextString(m) }
func (*GameLoginRequest) ProtoMessage()               {}
func (*GameLoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GameLoginRequest) GetAppid() int32 {
	if m != nil {
		return m.Appid
	}
	return 0
}

func (m *GameLoginRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GameLoginRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type GameLoginResponse struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *GameLoginResponse) Reset()                    { *m = GameLoginResponse{} }
func (m *GameLoginResponse) String() string            { return proto.CompactTextString(m) }
func (*GameLoginResponse) ProtoMessage()               {}
func (*GameLoginResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GameLoginResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "yxl.micro.srv.account.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "yxl.micro.srv.account.LoginResponse")
	proto.RegisterType((*GameLoginRequest)(nil), "yxl.micro.srv.account.GameLoginRequest")
	proto.RegisterType((*GameLoginResponse)(nil), "yxl.micro.srv.account.GameLoginResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error)
	GameLogin(ctx context.Context, in *GameLoginRequest, opts ...client.CallOption) (*GameLoginResponse, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "yxl.micro.srv.account"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Login(ctx context.Context, in *LoginRequest, opts ...client.CallOption) (*LoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Login", in)
	out := new(LoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GameLogin(ctx context.Context, in *GameLoginRequest, opts ...client.CallOption) (*GameLoginResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Account.GameLogin", in)
	out := new(GameLoginResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	Login(context.Context, *LoginRequest, *LoginResponse) error
	GameLogin(context.Context, *GameLoginRequest, *GameLoginResponse) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Login(ctx context.Context, in *LoginRequest, out *LoginResponse) error {
	return h.AccountHandler.Login(ctx, in, out)
}

func (h *Account) GameLogin(ctx context.Context, in *GameLoginRequest, out *GameLoginResponse) error {
	return h.AccountHandler.GameLogin(ctx, in, out)
}

func init() { proto.RegisterFile("account.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0x4c, 0x4e, 0xce,
	0x2f, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xad, 0xac, 0xc8, 0xd1, 0xcb,
	0xcd, 0x4c, 0x2e, 0xca, 0xd7, 0x2b, 0x2e, 0x2a, 0xd3, 0x83, 0x4a, 0x2a, 0x99, 0x71, 0xf1, 0xf8,
	0xe4, 0xa7, 0x67, 0xe6, 0x05, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0xe4,
	0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x20, 0xb1, 0x82, 0xc4,
	0xe2, 0x62, 0x09, 0x26, 0x88, 0x18, 0x88, 0xad, 0xa4, 0xc8, 0xc5, 0x0b, 0xd5, 0x57, 0x5c, 0x90,
	0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc0, 0xc5, 0x9c, 0x5b, 0x9c, 0x0e, 0xd5, 0x07, 0x62, 0x2a, 0x05,
	0x70, 0x09, 0xb8, 0x27, 0xe6, 0xa6, 0xa2, 0x18, 0x2f, 0xc2, 0xc5, 0x9a, 0x58, 0x50, 0x90, 0x99,
	0x02, 0x56, 0xc7, 0x1a, 0x04, 0xe1, 0xc0, 0x2d, 0x65, 0xc2, 0x62, 0x29, 0x33, 0x92, 0xa5, 0xaa,
	0x5c, 0x82, 0x48, 0x26, 0xe2, 0xb2, 0xd8, 0xe8, 0x20, 0x23, 0x17, 0xbb, 0x23, 0xc4, 0x7f, 0x42,
	0x21, 0x5c, 0xac, 0x60, 0xe5, 0x42, 0xca, 0x7a, 0x58, 0x03, 0x40, 0x0f, 0xd9, 0x79, 0x52, 0x2a,
	0xf8, 0x15, 0x41, 0x6c, 0x54, 0x62, 0x10, 0x4a, 0xe0, 0xe2, 0x84, 0x3b, 0x44, 0x48, 0x1d, 0x87,
	0x26, 0x74, 0xcf, 0x4b, 0x69, 0x10, 0x56, 0x08, 0xb3, 0x21, 0x89, 0x0d, 0x1c, 0x6b, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x85, 0xca, 0xbc, 0x68, 0xc6, 0x01, 0x00, 0x00,
}
